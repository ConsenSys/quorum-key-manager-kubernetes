---
{{ $defaultNamespace := "qa-qkm" }}
{{ $tag := "v21.12.2" }}
{{ $defaultQkmChart := "consensys/quorumkeymanager" }}
{{ $defaultQkmChartVersion := "1.1.7" }}


qkm:
  namespace: {{ env "QKM_NAMESPACE" | default $defaultNamespace  }}

  image:
    repository: {{ env "QKM_REPOSITORY" | default "consensys/quorum-key-manager" }}
    tag: {{ env "QKM_TAG" | default $tag | quote }}
    pullPolicy: Always
  
  imageCredentials:
    create: true
    registry: docker.consensys.net
    username: {{ env "REGISTRY_USERNAME" }}
    password: {{ env "REGISTRY_PASSWORD" }}

  chart:
    name: {{ env "QKM_CHART" | default $defaultQkmChart  }}
    version: {{ env "QKM_CHART_VERSION" | default $defaultQkmChartVersion  }}

  environment: {}
  environmentSecrets: {}


domainName: {{ env "DOMAIN_NAME" }}

b64Manifests: {{ requiredEnv "B64_MANIFESTS" }}

postgresql:
  certs:
    ca: {{ env "QKM_PG_CA" }}
    client:
      key: {{ env "QKM_PG_CLIENT_KEY" }}
      crt: {{ env "QKM_PG_CLIENT_CRT" }}
  tls:
    enabled: false
  database: testDb
  host: postgres-postgresql
  port: 5432

auth:
  apikey:
    enabled: true
    file: "/apikey/api-keys.csv"
    contents: |
      {{ readFile "api-key/api-keys.csv" }}

  oidc:
    enabled: true
    ca: {{ env "QKM_AUTH_OIDC_CA" }}
    pubKey: {{ env "QKM_AUTH_OIDC_PUB_KEY" }}
    issuer: {{ env "QKM_AUTH_OIDC_ISSUER_URL" }}
    audience: {{ env "QKM_AUTH_OIDC_AUDIENCE" }}
  tls:
    enabled: true
    cacert: {{ env "QKM_AUTH_TLS_CA"}}
    secretName: {{ env "QKM_AUTH_TLS_SECRET_NAME" }}

storage:
  nfs:
    enabled: true
    driver: {{ env "QKM_STORAGE_NFS_DRIVER" }}
    provisioner: {{ env "QKM_STORAGE_NFS_PROVISIONER" }}
    fsID: {{ env "QKM_STORAGE_NFS_FS_ID" }}
  mountPath: /vault/token

migrate:
  environment: {}
  environmentSecrets: {}
  existingSecret: "remove-or-update-me"