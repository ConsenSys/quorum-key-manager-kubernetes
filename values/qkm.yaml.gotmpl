image:
  {{- .Values.qkm.image | toYaml | nindent 2 }}
  pullPolicy: {{ .Values.qkm.image.pullPolicy }}
imageCredentials:
  create: true
  registry: docker.consensys.net
  username: {{ .Values.qkm.imageCredentials.username }}
  password: {{ .Values.qkm.imageCredentials.password }}
environment:
  HTTP_HOST: 0.0.0.0
  LOG_FORMAT: json
  DB_HOST: {{ .Values.postgresql.host }}
  DB_PORT: {{ .Values.postgresql.port }}
  DB_DATABASE: {{ .Values.postgresql.database }}
  DB_USER: {{ .Values.postgresql.user }}
  DB_PASSWORD: {{ .Values.postgresql.password }}
  {{ if .Values.postgresql.tls.enabled }}
  DB_TLS_SSLMODE: "require"
  DB_TLS_CA: "/postgres/certs/ca.crt"
  DB_TLS_CERT: "/postgres/certs/client.crt"
  DB_TLS_KEY: "/postgres/certs/client.key"
  {{ end }}
  {{ if .Values.auth.tls.enabled }}
  HTTPS_ENABLED: {{ .Values.auth.tls.enabled }}
  HTTPS_SERVER_KEY: "/certificates/tls.key"
  HTTPS_SERVER_CERT: "/certificates/tls.crt"
  AUTH_TLS_CA: "/certificates/ca.crt"
  {{ end }}
  {{ if .Values.auth.apikey.enabled }}
  AUTH_API_KEY_FILE: {{ .Values.auth.apikey.file }}
  {{ end }}
  {{ if .Values.auth.oidc.enabled }}
  AUTH_OIDC_CA_CERT: "/oidc_certs/ca.crt"
  AUTH_OIDC_PUB_KEY: "/oidc_certs/oidc.pub"
  AUTH_OIDC_ISSUER_URL: {{ .Values.auth.oidc.issuer }}
  AUTH_OIDC_AUDIENCE: {{ .Values.auth.oidc.audience }}
  {{ end }}
  {{- range $key,$value := .Values.qkm.environment }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
environmentSecrets:
  {{- range $key,$value := .Values.qkm.environmentSecrets }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
{{- if .Values.domainName }}
ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
    
  hosts:
    - host: {{ .Values.qkm.namespace }}.{{ .Values.domainName }}
      paths:
        - path: /
          pathType: Prefix
          servicePort: 8080
  tls:
    - hosts:
      - {{ .Values.qkm.namespace }}.{{ .Values.domainName }}
{{- end }}
      
manifests: |-
  {{ if .Values.b64Manifests }}
  {{- toYaml .Values.b64Manifests | b64dec }}
  {{ end }}

postgresql:
  certs:
    ca: {{ .Values.postgresql.certs.ca }}
    client:
      key: {{ .Values.postgresql.certs.client.key }}
      crt: {{ .Values.postgresql.certs.client.crt }}
  tls:
    enabled: {{ .Values.postgresql.tls.enabled }}
auth:
  apikey:
    enabled: {{ .Values.auth.apikey.enabled }}
    file: {{ .Values.auth.apikey.file }}
    contents: |-
{{ .Values.auth.apikey.contents | indent 6 }}

  oidc:
    enabled: {{ .Values.auth.oidc.enabled }}
    ca: {{ .Values.auth.oidc.ca }}
    issuer: {{ .Values.auth.oidc.issuer }}
    pubKey: {{ .Values.auth.oidc.pubKey }}
    
  tls:
    enabled: {{ .Values.auth.tls.enabled }}
    cacert: {{ .Values.auth.tls.cacert }}
    secretName: {{ .Values.auth.tls.secretName }}

storage:
  nfs:
    enabled: {{ .Values.storage.nfs.enabled }}
    driver: {{ .Values.storage.nfs.driver }}
    provisioner: {{ .Values.storage.nfs.provisioner }}
    fsID: {{ .Values.storage.nfs.fsID }}

migrate:
  environment:
    HTTP_HOST: 0.0.0.0
    LOG_FORMAT: json
    DB_HOST: {{ .Values.postgresql.host }}
    DB_PORT: 5432
    DB_DATABASE: {{ .Values.postgresql.database }}
    DB_USER: {{ .Values.postgresql.user }}
    DB_PASSWORD: {{ .Values.postgresql.password }}
    {{ if .Values.postgresql.tls.enabled }}
    DB_TLS_SSLMODE: "require"
    DB_TLS_CA: "/postgres/certs/ca.crt"
    DB_TLS_CERT: "/postgres/certs/client.crt"
    DB_TLS_KEY: "/postgres/key/client.key"
    {{ end }}
  existingSecret: {{ .Values.migrate.existingSecret }}

vault:
  tls:
    enabled: {{ .Values.vault.tls.enabled }}
  agents:
  {{- range .Values.vault.agents }}
  - name: {{ .name }}
    vaultAddress: {{ .vaultAddress }}
    image:
      repository: vault
      tag: 1.8.2
    config:
      wrapTTL: ""
      role: {{ .config.role }}
    ca: {{ .ca }}
    key: {{ .key }}
    crt: {{ .crt }}
    mountPath: /vault/token
    {{- end }}
podSecurityContext:
  fsGroup: 1001