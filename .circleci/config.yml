version: 2.1

orbs:
  go: circleci/go@1.5.0
  aws-eks: circleci/aws-eks@2.2.0
  helm: circleci/helm@2.0.0

commands:
  init:
    description: "Install"
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          cluster-name: ${AWS_EKS_CLUSTER_NAME}
      - helm/install-helm-client:
          version: v3.6.3
      - run:
          name: Install helm plugins
          command: helm plugin install https://github.com/databus23/helm-diff
      - run:
          name: Install helmfile
          command: |
            curl -L --fail --retry 3 -o ./helmfile  https://github.com/roboll/helmfile/releases/download/v0.144.0/helmfile_linux_amd64
            chmod +x ./helmfile
            sudo mv ./helmfile /usr/local/bin/helmfile
     
parameters:
  qkm-namespace:
    type: string
    default: ""
  qkm-tag:
    type: string
    default: ""
  environment-values:
    type: string
    default: ""
  registry-username:
    type: string
    default: "" 
  registry-password:
    type: string
    default: ""  
  qkm-repository:
    type: string
    default: ""

jobs:
  lint:
    executor:
      name: go/default
      tag: '1.16.8'
    steps:
      - init
      - run:
          name: helmfile lint
          command: helmfile -e ${ENVIRONMENT_VALUES} -f helmfile-core.yaml lint
  validate:
    executor:
      name: go/default
      tag: '1.16.8'
    steps:
      - init
      - run:
          name: helmfile validate
          command: helmfile -e ${ENVIRONMENT_VALUES} -f helmfile-core.yaml template --validate
  deploy:
    executor:
      name: go/default
      tag: '1.16.8'
    parameters:
      docker-image-registry:
        type: string
      docker-user:
        type: string
      docker-password:
        type: string
    steps:
      - init
      - run:
          name: helmfile apply
          command: |
            export QKM_TAG="<< pipeline.parameters.qkm-tag >>"
            export QKM_NAMESPACE="<< pipeline.parameters.qkm-namespace >>"
            export ENVIRONMENT_VALUES="<< pipeline.parameters.environment-values >>"
            export REGISTRY_USERNAME="<< pipeline.parameters.registry-username >>"
            export REGISTRY_PASSWORD="<< pipeline.parameters.registry-password >>"
            export QKM_REPOSITORY="<< pipeline.parameters.qkm-repository >>"
            helmfile -e ${ENVIRONMENT_VALUES} -f helmfile-core.yaml apply --suppress-secrets --detailed-exitcode=false --concurrency 1
  
  clean-namespaces:
    executor:
      name: go/default
      tag: '1.16.8'
    steps:
      - init
      - run:
          name: Delete namespaces
          command: kubectl get ns -o go-template --template='{{range .items}}{{if .metadata.annotations.disposable}}{{if eq .metadata.annotations.disposable "true"}}{{.metadata.name}} {{.metadata.creationTimestamp}}{{"\n"}}{{end}}{{end}}{{end}}' | awk '$2 <= "'$(date -d'now-2 days' -Ins --utc | sed 's/+0000/Z/')'" { print $1 }' | xargs -r kubectl delete ns --grace-period=0 --force

workflows:
  default:
    jobs:
      - lint:
          filters:
            branches:
              ignore:
                - main
      - validate:
          filters:
            branches:
              ignore:
                - main
          requires: 
            - lint
  # API flow is triggered when namespace
  # is "qa-qkm"
  # or "staging-qkm"
  circleci-api:
    when:
      or:
        - equal: [ qa-qkm, << pipeline.parameters.qkm-namespace >> ]
        - equal: [ staging-qkm, << pipeline.parameters.qkm-namespace >> ]
    jobs:
      - deploy:
          context:
            - cloudsmith-tanuki-rw
          docker-password: ${CLOUDSMITH_PASS_RW}
          docker-user: ${CLOUDSMITH_USER_RW}
          docker-image-registry: ${CLOUDSMITH_DEV_REPO}
  schedule-clean-namespaces:
    triggers:
      - schedule:
          cron: "0 5 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - clean-namespaces
